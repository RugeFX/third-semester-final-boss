/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router";

import { Route as rootRouteImport } from "./routes/__root";
import { Route as AboutRouteImport } from "./routes/about";
import { Route as AuthedRouteImport } from "./routes/_authed";
import { Route as AuthedARouteImport } from "./routes/_authed.a";

const IndexLazyRouteImport = createFileRoute("/")();

const AboutRoute = AboutRouteImport.update({
  id: "/about",
  path: "/about",
  getParentRoute: () => rootRouteImport,
} as any);
const AuthedRoute = AuthedRouteImport.update({
  id: "/_authed",
  getParentRoute: () => rootRouteImport,
} as any);
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route));
const AuthedARoute = AuthedARouteImport.update({
  id: "/a",
  path: "/a",
  getParentRoute: () => AuthedRoute,
} as any);

export interface FileRoutesByFullPath {
  "/": typeof IndexLazyRoute;
  "/about": typeof AboutRoute;
  "/a": typeof AuthedARoute;
}
export interface FileRoutesByTo {
  "/": typeof IndexLazyRoute;
  "/about": typeof AboutRoute;
  "/a": typeof AuthedARoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexLazyRoute;
  "/_authed": typeof AuthedRouteWithChildren;
  "/about": typeof AboutRoute;
  "/_authed/a": typeof AuthedARoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/about" | "/a";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/about" | "/a";
  id: "__root__" | "/" | "/_authed" | "/about" | "/_authed/a";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  AuthedRoute: typeof AuthedRouteWithChildren;
  AboutRoute: typeof AboutRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/about": {
      id: "/about";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof AboutRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/_authed": {
      id: "/_authed";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AuthedRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexLazyRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/_authed/a": {
      id: "/_authed/a";
      path: "/a";
      fullPath: "/a";
      preLoaderRoute: typeof AuthedARouteImport;
      parentRoute: typeof AuthedRoute;
    };
  }
}

interface AuthedRouteChildren {
  AuthedARoute: typeof AuthedARoute;
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedARoute: AuthedARoute,
};

const AuthedRouteWithChildren = AuthedRoute._addFileChildren(AuthedRouteChildren);

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthedRoute: AuthedRouteWithChildren,
  AboutRoute: AboutRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
