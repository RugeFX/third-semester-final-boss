/**
 * Generated by orval v7.13.0 🍺
 * Do not edit manually.
 * Parking Management API
 * API for managing users, parking levels, vehicles, and transactions for a parking facility.
This documentation provides a base for all the resources defined in the database schema.

 * OpenAPI spec version: 1.0.0
 */

import type { RequestHandlerOptions } from "msw";
import { delay, HttpResponse, http } from "msw";

import type { TokenResponse } from ".././models";

export const getLoginUserResponseMock = (): TokenResponse => ({});

export const getLoginUserMockHandler = (
	overrideResponse?:
		| TokenResponse
		| ((
				info: Parameters<Parameters<typeof http.post>[1]>[0],
		  ) => Promise<TokenResponse> | TokenResponse),
	options?: RequestHandlerOptions,
) => {
	return http.post(
		"*/auth/login",
		async (info) => {
			await delay(1000);

			return new HttpResponse(
				JSON.stringify(
					overrideResponse !== undefined
						? typeof overrideResponse === "function"
							? await overrideResponse(info)
							: overrideResponse
						: getLoginUserResponseMock(),
				),
				{ status: 200, headers: { "Content-Type": "application/json" } },
			);
		},
		options,
	);
};
export const getAuthMock = () => [getLoginUserMockHandler()];
