/**
 * Generated by orval v7.13.0 🍺
 * Do not edit manually.
 * Parking Management API
 * API for managing users, parking levels, vehicles, and transactions for a parking facility.
This documentation provides a base for all the resources defined in the database schema.

 * OpenAPI spec version: 1.0.0
 */
import { faker } from "@faker-js/faker";
import type { RequestHandlerOptions } from "msw";
import { delay, HttpResponse, http } from "msw";

import type { DashboardSummaryResponse } from ".././models";

export const getGetDashboardSummaryResponseMock =
	(): DashboardSummaryResponse => ({
		...{
			success: faker.datatype.boolean(),
			message: faker.string.alpha({ length: { min: 10, max: 20 } }),
		},
		...{
			data: {
				activeTransactions: faker.helpers.arrayElement([
					faker.number.int({ min: undefined, max: undefined }),
					undefined,
				]),
				totalCapacity: faker.helpers.arrayElement([
					faker.number.int({ min: undefined, max: undefined }),
					undefined,
				]),
				membershipStatus: faker.helpers.arrayElement([
					faker.string.alpha({ length: { min: 10, max: 20 } }),
					undefined,
				]),
				membershipEndsAt: faker.helpers.arrayElement([
					`${faker.date.past().toISOString().split(".")[0]}Z`,
					undefined,
				]),
			},
		},
	});

export const getGetDashboardSummaryMockHandler = (
	overrideResponse?:
		| DashboardSummaryResponse
		| ((
				info: Parameters<Parameters<typeof http.get>[1]>[0],
		  ) => Promise<DashboardSummaryResponse> | DashboardSummaryResponse),
	options?: RequestHandlerOptions,
) => {
	return http.get(
		"*/dashboard/summary",
		async (info) => {
			await delay(1000);

			return new HttpResponse(
				JSON.stringify(
					overrideResponse !== undefined
						? typeof overrideResponse === "function"
							? await overrideResponse(info)
							: overrideResponse
						: getGetDashboardSummaryResponseMock(),
				),
				{ status: 200, headers: { "Content-Type": "application/json" } },
			);
		},
		options,
	);
};
export const getDashboardMock = () => [getGetDashboardSummaryMockHandler()];
